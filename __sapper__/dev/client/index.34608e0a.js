import { S as SvelteComponentDev, i as init, d as dispatch_dev, s as safe_not_equal, v as validate_slots, o as onMount, g as globals, a as space, e as element, t as text, q as query_selector_all, b as detach_dev, c as claim_space, f as claim_element, h as children, j as claim_text, k as attr_dev, l as add_location, m as insert_dev, n as append_dev, p as noop } from './client.8f594166.js';

/* src/routes/index.svelte generated by Svelte v3.29.0 */

const { console: console_1 } = globals;
const file = "src/routes/index.svelte";

function create_fragment(ctx) {
	let t0;
	let section;
	let t1;

	const block = {
		c: function create() {
			t0 = space();
			section = element("section");
			t1 = text("-->");
			this.h();
		},
		l: function claim(nodes) {
			const head_nodes = query_selector_all("[data-svelte=\"svelte-m6o6gu\"]", document.head);
			head_nodes.forEach(detach_dev);
			t0 = claim_space(nodes);
			section = claim_element(nodes, "SECTION", { class: true });
			var section_nodes = children(section);
			t1 = claim_text(section_nodes, "-->");
			section_nodes.forEach(detach_dev);
			this.h();
		},
		h: function hydrate() {
			document.title = "CodeMonkeyWTF";
			attr_dev(section, "class", "hero is-fullheight svelte-1qrxjab");
			add_location(section, file, 34, 0, 589);
		},
		m: function mount(target, anchor) {
			insert_dev(target, t0, anchor);
			insert_dev(target, section, anchor);
			append_dev(section, t1);
		},
		p: noop,
		i: noop,
		o: noop,
		d: function destroy(detaching) {
			if (detaching) detach_dev(t0);
			if (detaching) detach_dev(section);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_fragment.name,
		type: "component",
		source: "",
		ctx
	});

	return block;
}

const URL = "https://discordapp.com/api/guilds/698177341586800672/widget.json";

function instance($$self, $$props, $$invalidate) {
	let { $$slots: slots = {}, $$scope } = $$props;
	validate_slots("Routes", slots, []);
	let discord;

	onMount(async function () {
		const response = await fetch(URL);
		discord = await response.json();
		console.log(discord);
	});

	const writable_props = [];

	Object.keys($$props).forEach(key => {
		if (!~writable_props.indexOf(key) && key.slice(0, 2) !== "$$") console_1.warn(`<Routes> was created with unknown prop '${key}'`);
	});

	$$self.$capture_state = () => ({ onMount, URL, discord });

	$$self.$inject_state = $$props => {
		if ("discord" in $$props) discord = $$props.discord;
	};

	if ($$props && "$$inject" in $$props) {
		$$self.$inject_state($$props.$$inject);
	}

	return [];
}

class Routes extends SvelteComponentDev {
	constructor(options) {
		super(options);
		init(this, options, instance, create_fragment, safe_not_equal, {});

		dispatch_dev("SvelteRegisterComponent", {
			component: this,
			tagName: "Routes",
			options,
			id: create_fragment.name
		});
	}
}

export default Routes;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguMzQ2MDhlMGEuanMiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9yb3V0ZXMvaW5kZXguc3ZlbHRlIl0sInNvdXJjZXNDb250ZW50IjpbIjxzY3JpcHQ+XG4gIGltcG9ydCB7b25Nb3VudH0gZnJvbSAnc3ZlbHRlJztcbiAgY29uc3QgVVJMID0gICdodHRwczovL2Rpc2NvcmRhcHAuY29tL2FwaS9ndWlsZHMvNjk4MTc3MzQxNTg2ODAwNjcyL3dpZGdldC5qc29uJztcbiAgbGV0IGRpc2NvcmRcblxub25Nb3VudChhc3luYyBmdW5jdGlvbigpe1xuICBjb25zdCByZXNwb25zZSA9IGF3YWl0IGZldGNoKFVSTCk7XG4gIGRpc2NvcmQgPSBhd2FpdCByZXNwb25zZS5qc29uKCk7XG4gIGNvbnNvbGUubG9nKGRpc2NvcmQpXG59KVxuXG48L3NjcmlwdD5cblxuPHN0eWxlPlxuICAuaGVybyB7XG4gICAgYmFja2dyb3VuZC1pbWFnZTogbGluZWFyLWdyYWRpZW50KCMzMzQ3NUIsIzI2MkQzNSk7XG4gIH1cblxuICAuYm94IHtcbiAgICBjb2xvcjogeWVsbG93O1xuICAgIGJhY2tncm91bmQtY29sb3I6ICMzMzQ3NWI7XG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICAgIG1hcmdpbi10b3A6IDVyZW07XG4gIH1cblxuICAubG9nb19odWdlIHtcbiAgICBtYXJnaW46IGF1dG8gYXV0byA1cmVtIGF1dG87XG4gIH1cbjwvc3R5bGU+XG5cbjxzdmVsdGU6aGVhZD5cbiAgPHRpdGxlPkNvZGVNb25rZXlXVEY8L3RpdGxlPlxuPC9zdmVsdGU6aGVhZD5cblxuPHNlY3Rpb24gY2xhc3M9XCJoZXJvIGlzLWZ1bGxoZWlnaHRcIj5cbiAgPCEtLTxkaXYgY2xhc3M9XCJoZXJvLWhlYWRcIj48L2Rpdj4tLT5cbiAgLS0+PCEtLSAgPGRpdiBjbGFzcz1cImhlcm8gYm9keVwiPlxuICAgIDxkaXYgY2xhc3M9XCJjb250YWluZXJcIj5cbiAgICAgICAgPGltZyBjbGFzcz1cImhlcm9faHVnZVwiIHNyYz1cImNvZGUtbW9ua2V5cy1vcmFuZ2UtZGFyay1sYXJnZS5zdmdcIiBhbHQ9XCJjYXJ0b29uIG1vbmtleSBsb2dvXCIgd2lkdGg9MjUwIC8+XG4gICAgICAgIHsjaWYgZGlzY29yZCAhPT0gdW5kZWZpbmVkfVxuICAgICAgICAgIDxhIGhyZWY9e2Rpc2NvcmQuaW5zdGFudF9pbnZpdGV9IGNsYXNzPVwiYm94XCI+e2Rpc2NvcmQubmFtZX08YnIvPiBEaXNjb3JkIDxici8+SW5zdGFudCBJbnZpdGUhPC9hPlxuICAgICAgICB7L2lmfVxuICAgIDwvZGl2PlxuICA8L2Rpdj5cbiAgPCEtLSAgPGRpdiBjbGFzcz1cImhlcm8tZm9vdFwiPjwvZGl2Pi0tPlxuPC9zZWN0aW9uPlxuIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O01BRVEsR0FBRyxHQUFJLGtFQUFrRTs7Ozs7S0FDM0UsT0FBTzs7Q0FFYixPQUFPO1FBQ0MsUUFBUSxTQUFTLEtBQUssQ0FBQyxHQUFHO0VBQ2hDLE9BQU8sU0FBUyxRQUFRLENBQUMsSUFBSTtFQUM3QixPQUFPLENBQUMsR0FBRyxDQUFDLE9BQU87Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OyJ9
